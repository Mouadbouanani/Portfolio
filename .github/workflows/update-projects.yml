name:  Update Portfolio Projects

on:
  workflow_dispatch: # allows manual trigger
  schedule:
    - cron: '0 0 * * 0' # runs weekly (Sunday midnight)

jobs:
  update-projects:
    runs-on: ubuntu-latest

    steps:
      - name:  Checkout repository
        uses: actions/checkout@v4

      - name: ⚙ Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name:  Install jq
        run: sudo apt-get install -y jq

      - name:  Fetch and update projects.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Fetching ALL repositories for Mouadbouanani..."
          echo '[]' > temp_repos.json
          page=1
          per_page=100
          total_repos=0

          while true; do
            echo " Fetching page $page..."
            response=$(curl -s \
              -H "Authorization: token $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.mercy-preview+json" \
              "https://api.github.com/users/Mouadbouanani/repos?per_page=$per_page&page=$page&type=owner&sort=updated")

            if ! echo "$response" | jq empty 2>/dev/null; then
              echo " Invalid JSON response on page $page"
              break
            fi

            page_count=$(echo "$response" | jq 'length')
            echo "Found $page_count repositories on page $page"

            if [ "$page_count" -eq 0 ]; then
              echo " No more repositories found. Pagination complete."
              break
            fi

            total_repos=$((total_repos + page_count))
            jq --argjson new_repos "$response" '. += $new_repos' temp_repos.json > temp_merged.json
            mv temp_merged.json temp_repos.json

            if [ "$page_count" -lt "$per_page" ]; then
              echo " Last page reached. Pagination complete."
              break
            fi

            page=$((page + 1))
            [ "$page" -gt 100 ] && echo "⚠ Safety limit reached (100 pages). Stopping." && break
            sleep 1
          done

          echo "Total repositories fetched: $total_repos"

          #  Ensure public directory exists
          mkdir -p public

          # Format ALL repositories
          jq '[.[] | {
            id: .id,
            name: .name,
            description: (if .description == null then "No description provided" else .description end),
            html_url: .html_url,
            homepage: .homepage,
            language: (if .language == null then "Not specified" else .language end),
            stargazers_count: .stargazers_count,
            forks_count: .forks_count,
            topics: (if .topics == null then [] else .topics end),
            created_at: .created_at,
            updated_at: .updated_at,
            fork: .fork
          }] | sort_by(.updated_at) | reverse' temp_repos.json > public/projects.json

          rm temp_repos.json

          PROJECT_COUNT=$(jq 'length' public/projects.json)
          echo " Found $PROJECT_COUNT total repositories"
          jq -r '.[] | "  - \(.name) (\(.language)) - \(.description)"' public/projects.json

      - name:  Commit and push updated projects.json
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add public/projects.json
          git commit -m "Update projects.json [skip ci]" || echo "No changes to commit"
          git commit -m "Update projects.json [skip ci]" || echo "No changes to commit"
          git push
