run: |
  echo "Fetching ALL repositories for Mouadbouanani..."
  echo '[]' > temp_repos.json
  page=1
  per_page=100
  total_repos=0

  while true; do
    echo " Fetching page $page..."
    response=$(curl -s \
      -H "Authorization: token $GITHUB_TOKEN" \
      -H "Accept: application/vnd.github.mercy-preview+json" \
      "https://api.github.com/users/Mouadbouanani/repos?per_page=$per_page&page=$page&type=owner&sort=updated")

    if ! echo "$response" | jq empty 2>/dev/null; then
      echo " Invalid JSON response on page $page"
      break
    fi

    page_count=$(echo "$response" | jq 'length')
    echo "Found $page_count repositories on page $page"

    if [ "$page_count" -eq 0 ]; then
      echo " No more repositories found. Pagination complete."
      break
    fi

    total_repos=$((total_repos + page_count))
    jq --argjson new_repos "$response" '. += $new_repos' temp_repos.json > temp_merged.json
    mv temp_merged.json temp_repos.json

    if [ "$page_count" -lt "$per_page" ]; then
      echo " Last page reached. Pagination complete."
      break
    fi

    page=$((page + 1))
    [ "$page" -gt 100 ] && echo "âš  Safety limit reached (100 pages). Stopping." && break
    sleep 1
  done

  echo "Total repositories fetched: $total_repos"

  #  Ensure 'public' directory exists before writing
  mkdir -p public

  # Format ALL repositories
  jq '[.[] | {
    id: .id,
    name: .name,
    description: (if .description == null then "No description provided" else .description end),
    html_url: .html_url,
    homepage: .homepage,
    language: (if .language == null then "Not specified" else .language end),
    stargazers_count: .stargazers_count,
    forks_count: .forks_count,
    topics: (if .topics == null then [] else .topics end),
    created_at: .created_at,
    updated_at: .updated_at,
    fork: .fork
  }] | sort_by(.updated_at) | reverse' temp_repos.json > public/projects.json

  rm temp_repos.json

  PROJECT_COUNT=$(jq 'length' public/projects.json)
  echo " Found $PROJECT_COUNT total repositories"
  jq -r '.[] | "  - \(.name) (\(.language)) - \(.description)"' public/projects.json
